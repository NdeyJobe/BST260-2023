# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots(a, b, c)
# Generate x-values for the plot
#x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(a, b, c) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(a, b, c) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - (4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - (4 * a * c)) / (2 * a)
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots(a, b, c)
# Generate x-values for the plot
#x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - (4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots(a, b, c)
# Generate x-values for the plot
#x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
# Generate x-values for the plot
x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots <- roots(a, b, c)
# Generate x-values for the plot
x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(a, b, c) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Given value
a <- 1
b <- -3
c <- 2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
#
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots <- roots(a, b, c)
# Generate x-values for the plot
x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
#
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots <- roots(a, b, c)
# Generate x-values for the plot
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
#
# Given values
a <- 1
b <- -3
c <- 2
# Calculate the roots
roots <- function(a, b, c) {
x1 <- (-b + sqrt(b^2 - 4 * a * c)) / (2 * a)
x2 <- (-b - sqrt(b^2 - 4 * a * c)) / (2 * a)
roots <- c(x1, x2)
# Return a value
return(roots)
}
roots <- roots(a, b, c)
# Generate x-values for the plot
x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
x-vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
print(x_vals)
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
print(x_vals)
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
print(x_vals)
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
print(x_vals)
?polyroot
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
print("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
ax^2 + bx + c
}
# Given values
a = 1
b = 3
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
y_vals <- quadratic_equation(x_vals)
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
print("Rool 1:", roots[1], "\n")
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
a * x^2 + b * x + c
}
# Given values
a = 1
b = -1
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
a * x^2 + b * x + c
}
# Given values
a = 1
b = -1
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
y_vals <- quadratic_equation(x_vals)
y_vals
?plot
plot(x = x_vals, y = y_vals, type = l, col = blue, xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = 1, col = blue, xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = "l", col = blue, xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = "1", col = blue, xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = "l", col = blue, xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = "l", col = "blue", xlab = "x", ylab = "y")
plot(x = x_vals, y = y_vals, type = "l", col = "blue", xlab = "x", ylab = "y", main = "Quadratic Equation")
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
a * x^2 + b * x + c
}
# Given values
a = 1
b = -1
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
x_vals <- seq(min(roots) - 1, max(roots) + 1, length.out = 100)
y_vals <- quadratic_equation(x_vals)
plot(x = x_vals, y = y_vals, type = "l", col = "blue", xlab = "x", ylab = "y", main = "Quadratic Equation")
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Rool 1:", roots[1], "\n")
cat("Root 2:", roots[2], "\n")
# Solution 1
# Quadratic equation: ax^2 + bx + c
quadratic_equation <- function(x) {
a * x^2 + b * x + c
}
# Given values
a = 1
b = -1
c = -2
# Calculate the discriminant
discriminant <- b^2 - 4 * a * c
# Check if the discriminant is non-negative
if (discriminant >= 0) {
# Calculate the two solutions
root1 <- (-b + sqrt(discriminant)) / (2 * a)
root2 <- (-b - sqrt(discriminant)) / (2 * a)
roots <- c(root1, root2)
# Print the solutions
cat("Root 1:", root1, "\n")
cat("Root 2:", root2, "\n")
} else {
cat("The quadratic equation has complex roots. \n")
}
# Given values
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Root 1:", roots[1], "\n", "Root 2:", roots[2], "\n")
#cat("Root 2:", roots[2], "\n")
# Given values
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat(" Root 1:", roots[1], "\n", "Root 2:", roots[2], "\n")
# Given values
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat("Root 1:", roots[1], "Root 2:", roots[2], "\n")
# Given values
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat(" Root 1:", roots[1], "\n", "Root 2:", roots[2], "\n")
# Given values
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat(" Root 1:", roots[1], "\n", "Root 2:", roots[2], "\n")
source(classnotes/28072023.qmd)
source(classnotes/28072023-notes.r)
source("classnotes/28072023-notes.r")
a = 1
b = -1
c = -2
# Coefficients of the quadratic equation
coefficients <- c(a, b, c)
# Solve the quadratic equation
roots <- polyroot(coefficients)
# Print the roots
cat(" Root 1:", roots[1], "\n", "Root 2:", roots[2], "\n")
quit()
